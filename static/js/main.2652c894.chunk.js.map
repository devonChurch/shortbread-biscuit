{"version":3,"sources":["types.ts","statics.ts","helpers.ts","Ball.tsx","Select.tsx","Time.tsx","Statistic.tsx","App.tsx","index.tsx"],"names":["EBallKeys","colors","dateFormat","createListFromTo","from","to","Array","fill","map","_","index","getBallColor","ball","getFrequencies","json","columns","max","createColor","shell","reduce","acc","Object","objectSpread","defineProperty","concat","frequencies","accFreq","row","accCol","column","entries","sort","_ref","_ref2","slicedToArray","_ref5","_ref6","enrichJsonData","csvJson","_ref8","position1","position2","position3","position4","position5","position6","drawNum","Draw","bonusBall1","bonusBall2","powerBall","drawDate","drawTime","Date","getTime","setToFromDate","jsonAll","fromDate","toDate","jsonSlice","filter","_ref7","sliceItemsByTime","data","title","Ball","color","handleClick","react_default","a","createElement","tag","style","minWidth","textAlign","onClick","optionsList","Select","handleToggle","checkIsActive","card","height","balls","key","join","opacity","marginBottom","display","src_Ball","Time","handleChange","currentDraws","totalDraws","Boolean","react","date_picker","RangePicker","size","defaultValue","moment","format","onChange","margin","Statistic","_ref3","frequency","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentBalls","getData","asyncToGenerator","regenerator_default","mark","_callee","response","csv","enrichedJson","wrap","_context","prev","next","axios","method","url","sent","csvToJson","fromString","slice","setState","prevState","stop","toggleCurrentBall","newBall","prevBalls","includes","prevBall","toConsumableArray","checkIsCurrentBall","isEmpty","length","isActive","updateFromToDates","toString","valueOf","_this2","_this$state","background","padding","es_row","type","gutter","col","span","xs","lg","xxl","src_Select","src_Time","list","grid","md","dataSource","renderItem","_ref4","Item","src_Statistic","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2652c894.chunk.js","sourcesContent":["export type TFrequency = [\n  number, // Ball.\n  number, // Frequency.\n  string // Color.\n];\n\nexport interface IBallData {\n  title: string;\n  frequencies: TFrequency[];\n}\n\nexport interface IBallCsv {\n  1: string;\n  2: string;\n  3: string;\n  4: string;\n  5: string;\n  6: string;\n  Draw: string;\n  \"Bonus Ball\": string;\n  \"2nd Bonus Ball\": string;\n  \"Power Ball\": string;\n  \"Draw Date\": string;\n}\n\nexport interface IBallJson {\n  position1: number;\n  position2: number;\n  position3: number;\n  position4: number;\n  position5: number;\n  position6: number;\n  bonusBall1: number;\n  bonusBall2: number;\n  powerBall: number;\n  drawNum: number;\n  drawDate: string;\n  drawTime: number;\n}\n\nexport enum EBallKeys {\n  position1 = \"position1\",\n  position2 = \"position2\",\n  position3 = \"position3\",\n  position4 = \"position4\",\n  position5 = \"position5\",\n  position6 = \"position6\",\n  bonusBall1 = \"bonusBall1\",\n  bonusBall2 = \"bonusBall2\",\n  powerBall = \"powerBall\",\n  drawNum = \"drawNum\",\n  drawDate = \"drawDate\",\n  drawTime = \"drawTime\"\n}\n","export const colors = {\n  // Balls.\n  ballPurple: \"#6200EA\",\n  ballRed: \"#E53935\",\n  ballGreen: \"#00BFA5\",\n  ballOrange: \"#FF6D00\",\n  ballBlue: \"#2962FF\",\n  // Background.\n  bgDark: \"#001529\",\n  bgLight: \"#f0f2f5\"\n};\n\nexport const dateFormat = \"YYYY/MM/DD\";\n","import { TFrequency, IBallData, IBallCsv, IBallJson, EBallKeys } from \"./types\";\nimport { colors } from \"./statics\";\n\nexport const createListFromTo = (from: number, to: number): number[] =>\n  new Array(to - from + 1).fill(0).map((_, index) => from + index);\n\nexport const getBallColor = (ball: number): string => {\n  switch (true) {\n    case ball >= 40:\n      return colors.ballPurple;\n    case ball >= 30:\n      return colors.ballRed;\n    case ball >= 20:\n      return colors.ballGreen;\n    case ball >= 10:\n      return colors.ballOrange;\n    default:\n      return colors.ballBlue;\n  }\n};\n\nexport const getFrequencies = (\n  json: IBallJson[],\n  columns: EBallKeys[],\n  max: number,\n  createColor: (ball: number) => string\n): TFrequency[] => {\n  const shell = new Array(max)\n    .fill(0)\n    .reduce((acc, _, index) => ({ ...acc, [`${index + 1}`]: 0 }), {});\n\n  const frequencies = json.reduce((accFreq, row) => {\n    return columns.reduce((accCol, column) => {\n      const ball = row[column];\n      return {\n        ...accCol,\n        [ball]: accCol[ball] + 1\n      };\n    }, accFreq);\n  }, shell);\n\n  return Object.entries(frequencies)\n    .sort(([, frequencyA], [, frequencyB]) =>\n      frequencyA > frequencyB ? -1 : 1\n    )\n    .map(\n      ([ball, frequency]): TFrequency => [+ball, +frequency, createColor(+ball)]\n    );\n};\n\nexport const sliceItemsByTime = (\n  json: IBallJson[],\n  fromDate: number,\n  toDate: number\n): IBallJson[] =>\n  json.filter(({ drawTime }) => drawTime >= fromDate && drawTime <= toDate);\n\nexport const enrichJsonData = (csvJson: IBallCsv[]): IBallJson[] =>\n  csvJson.map(\n    ({\n      1: position1, //                 \"33\"\n      2: position2, //                 \"15\"\n      3: position3, //                 \"11\"\n      4: position4, //                 \"2\"\n      5: position5, //                 \"35\"\n      6: position6, //                 \"10\"\n      Draw: drawNum, //                \"1816\"\n      \"Bonus Ball\": bonusBall1, //     \"5\"\n      \"2nd Bonus Ball\": bonusBall2, // \"\"\n      \"Power Ball\": powerBall, //      \"8\"\n      \"Draw Date\": drawDate //         \"Saturday 29 December 2018\"\n    }) => ({\n      position1: +position1,\n      position2: +position2,\n      position3: +position3,\n      position4: +position4,\n      position5: +position5,\n      position6: +position6,\n      bonusBall1: +bonusBall1,\n      bonusBall2: +bonusBall2,\n      powerBall: +powerBall,\n      drawNum: +drawNum,\n      drawDate,\n      drawTime: new Date(drawDate).getTime()\n    })\n  );\n\nexport const setToFromDate = (\n  jsonAll: IBallJson[],\n  fromDate: number,\n  toDate: number\n): {\n  data: IBallData[];\n  jsonSlice: IBallJson[];\n  fromDate: number;\n  toDate: number;\n} => {\n  const jsonSlice = sliceItemsByTime(jsonAll, fromDate, toDate);\n  const {\n    position1,\n    position2,\n    position3,\n    position4,\n    position5,\n    position6,\n    bonusBall1,\n    powerBall\n  } = EBallKeys;\n  // prettier-ignore\n  const data = [\n    {title: 'Most Frequent', frequencies: getFrequencies(jsonSlice, [position1, position1, position2, position3, position4, position5, position6, bonusBall1], 40, getBallColor) },\n    {title: 'Ball One', frequencies: getFrequencies(jsonSlice, [position1], 40, getBallColor) },\n    {title: 'Ball Two', frequencies: getFrequencies(jsonSlice, [position2], 40, getBallColor) },\n    {title: 'Ball Three', frequencies: getFrequencies(jsonSlice, [position3], 40, getBallColor) },\n    {title: 'Ball Four', frequencies: getFrequencies(jsonSlice, [position4], 40, getBallColor) },\n    {title: 'Ball Five', frequencies: getFrequencies(jsonSlice, [position5], 40, getBallColor) },\n    {title: 'Ball Six', frequencies: getFrequencies(jsonSlice, [position6], 40, getBallColor) },\n    {title: 'Bonus Ball', frequencies: getFrequencies(jsonSlice, [bonusBall1], 40, getBallColor) },\n    {title: 'Power Ball', frequencies: getFrequencies(jsonSlice, [powerBall], 10, () => 'blue') },\n  ];\n\n  return {\n    data,\n    jsonSlice,\n    fromDate,\n    toDate\n  };\n};\n","import React, { Component, Fragment, SFC } from \"react\";\nimport { Tag } from \"antd\";\n\ninterface IBall {\n  style?: {\n    [key: string]: string | number;\n  };\n  ball: number;\n  color: string;\n  handleClick: (ball: number) => void;\n}\n\nconst Ball: SFC<IBall> = ({ ball, color, handleClick }) => (\n  <Tag\n    color={color}\n    style={{ minWidth: \"40px\", textAlign: \"center\" }}\n    onClick={() => handleClick(ball)}\n  >\n    {ball}\n  </Tag>\n);\n\nexport default Ball;\n","import React, { SFC } from \"react\";\nimport { Card } from \"antd\";\nimport { createListFromTo, getBallColor } from \"./helpers\";\nimport Ball from \"./Ball\";\n\ninterface ISelect {\n  handleToggle: (ball: number) => void;\n  checkIsActive: (ball: number) => boolean;\n}\n\nconst optionsList = [\n  createListFromTo(1, 9),\n  createListFromTo(10, 19),\n  createListFromTo(20, 29),\n  createListFromTo(30, 39),\n  [40]\n];\n\nconst Select: SFC<ISelect> = ({ handleToggle, checkIsActive }) => (\n  <Card title=\"Selection\" style={{ height: \"100%\" }}>\n    {optionsList.map(balls => (\n      <div key={balls.join(\",\")}>\n        {balls.map(ball => (\n          <span\n            key={ball}\n            style={{\n              opacity: checkIsActive(ball) ? 1 : 0.2,\n              marginBottom: \"8px\",\n              display: \"inline-block\"\n            }}\n          >\n            <Ball\n              style={{\n                marginBottom: \"8px\"\n              }}\n              ball={ball}\n              color={getBallColor(ball)}\n              handleClick={() => handleToggle(ball)}\n            />\n          </span>\n        ))}\n      </div>\n    ))}\n  </Card>\n);\n\nexport default Select;\n","import React, { Fragment, SFC } from \"react\";\nimport moment from \"moment\";\nimport { Card, DatePicker } from \"antd\";\nimport { dateFormat } from \"./statics\";\n\ninterface ITime {\n  fromDate: number;\n  toDate: number;\n  handleChange: (_: any, fromToStrings: [string, string]) => void;\n  currentDraws: number;\n  totalDraws: number;\n}\n\nconst Time: SFC<ITime> = ({\n  fromDate,\n  toDate,\n  handleChange,\n  currentDraws,\n  totalDraws\n}) => (\n  <Card title=\"Time\" style={{ height: \"100%\" }}>\n    {Boolean(fromDate && toDate) && (\n      <Fragment>\n        <DatePicker.RangePicker\n          size=\"large\"\n          defaultValue={[moment(new Date(fromDate)), moment(new Date(toDate))]}\n          format={dateFormat}\n          onChange={handleChange}\n        />\n        <h3 style={{ margin: \"18px 0 0\" }}>\n          Showing <strong>{currentDraws}</strong> from a possible{\" \"}\n          <strong>{totalDraws}</strong> draws.\n        </h3>\n      </Fragment>\n    )}\n  </Card>\n);\n\nexport default Time;\n","import React, { SFC } from \"react\";\nimport { Card } from \"antd\";\nimport { IBallData } from \"./types\";\nimport Ball from \"./Ball\";\n\ninterface IStatistic {\n  title: IBallData[\"title\"];\n  frequencies: IBallData[\"frequencies\"];\n  handleToggle: (ball: number) => void;\n  checkIsActive: (ball: number) => boolean;\n}\n\nconst Statistic: SFC<IStatistic> = ({\n  title,\n  frequencies,\n  handleToggle,\n  checkIsActive\n}) => (\n  <Card title={title}>\n    {frequencies.map(\n      ([ball, frequency, color]) =>\n        Boolean(ball) && (\n          <div\n            key={ball}\n            style={{\n              opacity: checkIsActive(ball) ? 1 : 0.2\n            }}\n          >\n            <Ball\n              ball={ball}\n              color={color}\n              handleClick={() => handleToggle(ball)}\n            />\n            x{frequency}\n          </div>\n        )\n    )}\n  </Card>\n);\n\nexport default Statistic;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport csvToJson from \"csvtojson\";\nimport moment from \"moment\";\nimport { List, Card, Row, Col } from \"antd\";\nimport { IBallData, IBallJson } from \"./types\";\nimport { colors, dateFormat } from \"./statics\";\nimport { setToFromDate, enrichJsonData } from \"./helpers\";\nimport Select from \"./Select\";\nimport Time from \"./Time\";\nimport Statistic from \"./Statistic\";\n\ninterface IAppState {\n  data: IBallData[];\n  currentBalls: number[];\n  fromDate: number; // Milliseconds Date(x).getTime();\n  toDate: number; // Milliseconds Date(y).getTime();\n  jsonAll: IBallJson[];\n  jsonSlice: IBallJson[];\n}\n\nclass App extends Component<{}, IAppState> {\n  state: IAppState = {\n    data: [],\n    currentBalls: [],\n    fromDate: 0,\n    toDate: 0,\n    jsonAll: [],\n    jsonSlice: []\n  };\n\n  constructor() {\n    super({});\n    this.getData();\n  }\n\n  getData = async () => {\n    const response = await axios({\n      method: \"get\",\n      url: \"lotto-numbers.csv\"\n    });\n    const { data: csv } = response;\n    const csvJson = await csvToJson().fromString(csv);\n    const enrichedJson = enrichJsonData(csvJson);\n    const jsonAll = enrichedJson;\n    const fromDate = enrichedJson.slice(-1)[0].drawTime;\n    const toDate = enrichedJson[0].drawTime;\n\n    this.setState(prevState => ({\n      ...prevState,\n      jsonAll,\n      ...setToFromDate(jsonAll, fromDate, toDate)\n    }));\n  };\n\n  toggleCurrentBall = (newBall: number): void => {\n    this.setState(prevState => {\n      const { currentBalls: prevBalls } = prevState;\n      const isAlreadyActive = prevBalls.includes(newBall);\n      const currentBalls = isAlreadyActive\n        ? prevBalls.filter(prevBall => prevBall !== newBall)\n        : [...prevBalls, newBall];\n\n      return { ...prevState, currentBalls };\n    });\n  };\n\n  checkIsCurrentBall = (ball: number): boolean => {\n    const { currentBalls } = this.state;\n    const isEmpty = !currentBalls.length;\n    const isActive = currentBalls.includes(ball);\n\n    return isEmpty || isActive;\n  };\n\n  updateFromToDates = (_: any, [fromString, toString]: [string, string]) => {\n    const { jsonAll } = this.state;\n    const fromDate = moment(fromString, dateFormat).valueOf();\n    const toDate = moment(toString, dateFormat).valueOf();\n\n    this.setState(prevState => ({\n      ...prevState,\n      ...setToFromDate(jsonAll, fromDate, toDate)\n    }));\n  };\n\n  render() {\n    const { fromDate, toDate, jsonAll, jsonSlice } = this.state;\n    return (\n      <div>\n        <div\n          style={{\n            background: colors.bgDark,\n            padding: \"8px 16px\"\n          }}\n        >\n          <h1 style={{ color: \"white\", margin: 0 }}>Lotto Settings</h1>\n          <Row type=\"flex\" gutter={16}>\n            <Col span={24} xs={24} lg={24} xxl={12} style={{ margin: \"8px 0\" }}>\n              <Select\n                handleToggle={this.toggleCurrentBall}\n                checkIsActive={this.checkIsCurrentBall}\n              />\n            </Col>\n\n            <Col span={24} xs={24} lg={24} xxl={12} style={{ margin: \"8px 0\" }}>\n              <Time\n                fromDate={fromDate}\n                toDate={toDate}\n                handleChange={this.updateFromToDates}\n                currentDraws={jsonSlice.length}\n                totalDraws={jsonAll.length}\n              />\n            </Col>\n          </Row>\n        </div>\n\n        <div style={{ background: colors.bgLight, padding: \"16px\" }}>\n          <h2>Statistics</h2>\n          <List\n            grid={{\n              gutter: 16,\n              xs: 2,\n              md: 4,\n              xxl: 8\n            }}\n            dataSource={this.state.data}\n            renderItem={({ title, frequencies }: IBallData) => (\n              <List.Item>\n                <Statistic\n                  title={title}\n                  frequencies={frequencies}\n                  handleToggle={this.toggleCurrentBall}\n                  checkIsActive={this.checkIsCurrentBall}\n                />\n              </List.Item>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}